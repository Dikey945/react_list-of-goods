{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","goodA","goodB","ALPHABET","localeCompare","LENGTH","length","reverse","App","state","NONE","handleReset","setState","this","resetButtonVisibility","Boolean","className","type","classNames","onClick","map","good","uuidv4","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,uGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKT,EAASY,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SAlCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAMe,EAAb,4MACEC,MAAQ,CACNX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,EAMEC,YAAc,WACZ,EAAKC,SAAS,CACZd,YAAY,EACZD,SAAUJ,EAASiB,QATzB,4CAaE,WAAU,IAAD,OACP,EAAiCG,KAAKJ,MAA9BX,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SACdiB,EAAwBC,QAAQlB,IAAaC,EAEnD,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYrB,IAAaJ,EAASU,WAEtCgB,QAAS,kBACP,EAAKP,SAAS,CAAEf,SAAUJ,EAASU,YARvC,iCAcA,wBACEc,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYrB,IAAaJ,EAASY,SAEtCc,QAAS,kBACP,EAAKP,SAAS,CAAEf,SAAUJ,EAASY,UARvC,4BAcA,wBACEY,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAapB,IAEjBqB,QAAS,kBACP,EAAKP,SAAS,CAAEd,YAAaA,KARjC,qBAaCgB,GACC,wBACEG,KAAK,SACLD,UAAU,4BACVG,QAASN,KAAKF,YAHhB,sBASJ,6BACGhB,EAAkBD,EAAiB,CAClCG,WACAC,eACCsB,KAAI,SAAAC,GACL,OACE,oBACE,UAAQ,OADV,SAIGA,GAFIC,2BA/ErB,GAAyBC,aC1DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5eead477.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodA, goodB) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return goodA.localeCompare(goodB);\n\n      case SortType.LENGTH:\n        return goodA.length - goodB.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const resetButtonVisibility = Boolean(sortType) || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => (\n              this.setState({ sortType: SortType.ALPHABET })\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => (\n              this.setState({ sortType: SortType.LENGTH })\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={() => (\n              this.setState({ isReversed: !isReversed })\n            )}\n          >\n            Reverse\n          </button>\n          {resetButtonVisibility && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <ul>\n          {getReorderedGoods(goodsFromServer, {\n            sortType,\n            isReversed,\n          }).map(good => {\n            return (\n              <li\n                data-cy=\"Good\"\n                key={uuidv4()}\n              >\n                {good}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}